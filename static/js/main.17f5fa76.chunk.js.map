{"version":3,"sources":["img/iqvia.jpg","components/form/form.component.jsx","components/message/message.component.jsx","App.js","index.js"],"names":["module","exports","Form","handleChange","handleSubmit","formValues","interviewType","messageType","className","onSubmit","name","onChange","value","placeholder","required","type","Message","candidateFirstName","candidateRole","candidatePhone","interviewDate","interviewTime","interviewerFirstName","interviewerLastName","interviewDuration","interviewLocation","src","require","alt","App","props","e","setState","target","console","log","state","prevState","prevProps","preventDefault","isSubmited","candidateLastName","candidateEmail","interviewerRole","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17f5fa76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iqvia.9934596d.jpg\";","import React from 'react';\r\nimport './form.styles.scss';\r\n\r\nconst Form = ({handleChange, handleSubmit, formValues}) => {\r\n\r\n    let {interviewType, messageType} = formValues;\r\n\r\n    let isF2f = (interviewType) => {\r\n        if(interviewType === 'f2f') {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    isF2f();\r\n\r\n    return ( \r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n        <label>Message type:</label>\r\n        <select name='messageType' onChange={handleChange}>\r\n            <option value=\"candidateInvite\">Candidate Invite</option>\r\n            <option value=\"interviewerInvite\">Interviewer Invite</option>\r\n        </select>\r\n\r\n        <label>Interview type:</label>\r\n        <select name='interviewType' onChange={handleChange}>\r\n            <option value=\"face to face\">Face to face</option>\r\n            <option value=\"skype\">Skype</option>\r\n            <option value=\"skype video\">Skype Video</option>\r\n            <option value=\"telephone\">Telephone</option>\r\n        </select>\r\n\r\n        <label>Candidate data:</label>\r\n        <input placeholder=\"First name\" required type=\"text\" name=\"candidateFirstName\" onChange={handleChange} />\r\n        <input placeholder=\"Last name\" required type=\"text\" name=\"candidateLastName\" onChange={handleChange} />\r\n        <input placeholder=\"Job title\" required type=\"text\" name=\"candidateRole\" onChange={handleChange} />\r\n        <input placeholder=\"Telephone number\" required type=\"tel\" name=\"candidatePhone\" onChange={handleChange} />\r\n        <input placeholder=\"Email address\" required type=\"email\" name=\"candidateEmail\" onChange={handleChange} />\r\n        \r\n        \r\n        <label>Interview Data:</label>\r\n        <input placeholder=\"Interview date\" required type=\"date\" name=\"interviewDate\" onChange={handleChange} />\r\n        <input placeholder=\"Interview time + timezone\" type=\"text\" name=\"interviewTime\" onChange={handleChange} />\r\n        <input placeholder=\"Duration\" type=\"text\" name=\"interviewDuration\" onChange={handleChange} />\r\n        {(interviewType === 'face to face' ?\r\n        <input placeholder=\"Location\" type=\"text\" name=\"interviewLocation\" onChange={handleChange} /> :\r\n        null\r\n        )}\r\n\r\n        <label>Interviewer(s) data:</label>\r\n        <input required placeholder=\"First name\" type=\"text\" name=\"interviewerFirstName\" onChange={handleChange} />\r\n        <input required placeholder=\"Last name\" type=\"text\" name=\"interviewerLastName\" onChange={handleChange} />\r\n        {(messageType === 'candidateInvite' ? \r\n        <input required placeholder=\"Job title\" type=\"text\" name=\"interviewerRole\" onChange={handleChange} /> :\r\n        null\r\n        )}\r\n        \r\n\r\n\r\n        \r\n        <input className=\"submit-btn\" type=\"submit\" value=\"Submit\"/>\r\n      </form>\r\n     );\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\n\r\nconst Message = ({formValues}) => {\r\nlet {candidateFirstName, interviewType, candidateRole, candidatePhone, interviewDate, interviewTime, interviewerFirstName, interviewerLastName, interviewDuration, interviewLocation} = formValues;\r\n    return ( <div>\r\n\r\n<img src={require(\"../../img/iqvia.jpg\")} alt=\"iqvia logo\"></img>\r\n<br/>        \r\n<p>Dear {candidateFirstName},</p>\r\n\r\n<p>We are happy to confirm your {interviewType} interview for the role of {candidateRole}</p>\r\n\r\n<p>Please see interview details below:</p>\r\n\r\n<ul>\r\n<li>Date: {interviewDate} </li>   \r\n<li>Time: {interviewTime}  – please allow  approx. {interviewDuration} </li>   \r\n<li>Position: {candidateRole} </li>   \r\n<li>Interviewers: {interviewerFirstName} {interviewerLastName}</li> \r\n{(interviewType === 'face to face') ? <li>Location: {interviewLocation} </li> : null } \r\n</ul>\r\n\r\n<p>The manager will contact you on your telephone provided to us: {candidatePhone} – please make sure you are around your phone and have good signal connection.</p>\r\n\r\n<p>Please confirm as soon as possible if you have received my email with all details outlined as per above.</p>\r\n\r\n<p>If you have any further questions please do not hesitate to contact me.</p>\r\n\r\n<p>Wishing you best of luck!</p>\r\n\r\n<p>Kind regards,</p>\r\n        </div> );\r\n}\r\n \r\nexport default Message;","import React, { Component } from 'react';\n\nimport './App.css';\nimport Form from './components/form/form.component';\nimport Message from './components/message/message.component';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        messageType: 'candidateInvite',\n        interviewType: 'f2f',\n        candidateFirstName: '',\n        candidateLastName: '',\n        candidateRole: '',\n        candidatePhone: '',\n        candidateEmail: '',\n        interviewDate: '',\n        interviewDuration: '',\n        interviewLocation: '',\n        interviewerFirstName: '',\n        interviewerLastName: '',\n        interviewerRole: '',\n        isSubmited: false\n     }\n    }\n     \n  handleChange = (e) => {\n      // check it out: we get the evt.target.name (which will be either \"email\" or \"password\")\n      // and use it to target the key on our `state` object with the same name, using bracket syntax\n      this.setState({ [e.target.name]: e.target.value }, console.log(this.state));\n    }\n\n  handleSubmit = (e, prevState, prevProps) => {\n    console.log('handle submit')\n    e.preventDefault();\n    this.setState({ isSubmited: !this.state.isSubmited });\n\n\n  }\n\n  \n  render() { \n    let {isSubmited} = this.state;\n    return ( <div className=\"app\">\n      <div className=\"container\">\n        <h1>Message Builder</h1>\n        {(!isSubmited) ? \n        <Form formValues={this.state} handleSubmit={this.handleSubmit} handleChange={this.handleChange}/> \n        : \n        <Message formValues={this.state}/> }\n        \n    </div>\n\n    </div> );\n  }\n}\n\n \nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}